---
// server
import Code from "../../../components/Code";
import Layout from "../../../layouts/Layout.astro";
import { getGameId } from "../../../lib/params";
import prisma from "../../../lib/prisma";
const { codeId } = Astro.params;
import { type ICode } from "../../../lib/types";

let codeModel: ICode | undefined;
const user = Astro.cookies.get("session-mafia-grande")?.value;
const gameId = getGameId(Astro);

if (codeId && user) {
  const code = await prisma.codes.findFirst({
    where: {
      externalId: codeId,
    },
  });

  if (code) {
    const hasCorrectAnswer = await prisma.codesGuess.findFirst({
      where: {
        codesId: code.id,
        isCorrect: true,
        alias: {
          externalId: user,
        },
      },
    });
    codeModel = {
      externalId: code.externalId,
      id: code.id,
      hint: hasCorrectAnswer?.isCorrect ? code.hint : undefined,
      length: code.code.length,
      assignment: code.assignment,
      imagePath: code.imagePath || undefined,
    };
    if (!hasCorrectAnswer) {
      const alias = await prisma.alias.findFirstOrThrow({
        where: { externalId: user },
      });

      try {
        await prisma.codeFound.create({
          data: {
            aliasId: alias.id,
            codesId: code.id,
          },
        });
      } catch {
        console.log("not found");
      }
    }
  }
}
---

<Layout>
  <Code gameId={gameId} code={codeModel} client:only />
</Layout>
